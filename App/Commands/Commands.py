
from App.Util.VkApi import *
from App.Database.Database import Database
from App.Util.Logger import *
from threading import Timer
import time
from App.Util.WordConstructor import WordConstructor
import collections
import operator

# –ö—ç—à –∏–≥—Ä–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
cache_chat_state=dict()

# chat temp data = (level of game - easy or hard, other limits)
chat_temp = dict() # {game_level: GAME_EASY}
#requests.exceptions.ReadTimeout: HTTPSConnectionPool(host='lp.vk.com', port=443): Read timed out. (read timeout=35)

# –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
#database = Database()


class GAME_STATE:
    GAME_NOT_STARTED    = 0
    GAME_WAIT           = 1
    GAME_WAIT_NEXT_WORD = 2
    GAME_WAIT_ANSWER    = 3
class GAME_LEVEL:
    EASY_GAME = 0
    HARD_GAME = 1
    EASY_GAME_S = "–ª–µ–≥–∫–∏–π"
    HARD_GAME_S = "—Å–ª–æ–∂–Ω—ã–π"

WAIT_PRE_GAME           = 10 # SEC
WAIT_AFTER_WORD         = 5
DEFAULT_ROUND_COUNT     = 15
MAX_WORD_WAITING        = 25

def OnChatBotInvite(event, session):
    # add_event(chatId INT, textVar varchar(250) )
    database = Database()
    database.add_event(event.chat_id, "–ë–æ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ —á–∞—Ç")
    database.register_chat(event);

    OnChatBotInfo(event, session);
    #"3. –ê–≤–∞, —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –±–µ—Å–µ–¥–µ\n"
    #"4. –ê–≤–∞, –º–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n"
    #"5. –ê–≤–∞, –æ–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"

def OnChatBotInfo(event, session):
    write_msg(session, event.chat_id,
              "–í—Å–µ–º –ø—Ä–∏–≤–µ—Ç, —è –∏–≥—Ä–æ–≤–æ–π –∞–Ω–∞–≥—Ä–∞–º–º-–±–æ—Ç –ê–≤–∞ –æ—Ç –ø–∞–±–ª–∏–∫–∞ –∏–∑–æ–ª–æ—Ñ–æ–±–∏—è! ‚ù§ \n"
              "üî• –°–æ –º–Ω–æ–π –º–æ–∂–Ω–æ –ø–æ–∏–≥—Ä–∞—Ç—å –≤ —Å–ª–æ–≤–∞!\n\n"
              "üî• –î–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã –º–Ω–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–∞—Ç—å –¥–æ—Å—Ç—É–ø –∫ –¥–∞–Ω–Ω–æ–π –ø–µ—Ä–µ–ø–∏—Å–∫–µ (–Ω–∞–π–¥–∏ –º–µ–Ω—è –≤ —Å–ø–∏—Å–∫–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∏ –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É '–î–∞—Ç—å –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–π –ø–µ—Ä–µ–ø–∏—Å–∫–µ'\n\n"
              "üî• –ß—Ç–æ —Ç–∞–∫–æ–µ –∞–Ω–∞–≥—Ä–∞–º–º—ã –∏ –∫–∞–∫ –≤ –Ω–∏—Ö –∏–≥—Ä–∞—Ç—å? –í—Å—ë –æ—á–µ–Ω—å –ø—Ä–æ—Å—Ç–æ - —è –∑–∞–≥–∞–¥—ã–≤–∞—é —Å–ª–æ–≤–æ –∏ –ø–∏—à—É –±—É–∫–≤—ã, –∏–∑ –∫–æ—Ç–æ—Ä—ã—Ö –æ–Ω–æ —Å–æ—Å—Ç–æ–∏—Ç, –≤ —Ä–∞–∑–±—Ä–æ—Å. –ö—Ç–æ –ø–µ—Ä–≤—ã–π —Å–æ–±–µ—Ä–µ—Ç(–æ—Ç–≥–∞–¥–∞–µ—Ç) —Å–ª–æ–≤–æ, —Ç–æ—Ç –∏ –ø–æ–±–µ–¥–∏–ª!\n\n"

              #"&#128293; –ö–∞–∫ –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É –≤ –∞–Ω–∞–≥—Ä–∞–º–º—ã? –í—Å—ë —Ç–∞–∫–∂–µ –æ—á–µ–Ω—å –ø—Ä–æ—Å—Ç–æ. \n"
              #"&#9989; –ù–∞–ø–∏—à–∏—Ç–µ –≤ —á–∞—Ç - –∞–≤–∞ –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É \n"
              #"&#9989; –î–æ–∂–¥–∏—Ç–µ—Å—å –ø–æ—Å–ª–µ–¥—É—é—â–∏–π —É–∫–∞–∑–∞–Ω–∏–π –æ—Ç –º–µ–Ω—è.\n"
              #"&#9989; –ò—Ç–æ–≥–∏ –∏–≥—Ä—ã –ø–æ–¥–≤–æ–¥—è—Ç—Å—è –ø–æ –æ–∫–æ–Ω—á–∞–Ω–∏—é 15 —Ä–∞—É–Ω–¥–æ–≤.\n\n"
              #"&#9989; –ò—Ç–æ–≥–∏ –∏–≥—Ä—ã –ø–æ–¥–≤–æ–¥—è—Ç—Å—è –ø–æ –æ–∫–æ–Ω—á–∞–Ω–∏—é 15 —Ä–∞—É–Ω–¥–æ–≤.\n\n"

              "&#128293; –ú–æ–∏ –∫–æ–º–∞–Ω–¥—ã: \n"
              "&#9989; –ê–≤–∞, –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É\n"
              "&#9989; –ê–≤–∞, –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è/–ø–æ–º–æ—â—å/–∏–Ω—Ñ–æ\n"
              "&#9989; –ê–≤–∞, –æ—Å—Ç–∞–Ω–æ–≤–∏—Å—å/—Å—Ç–æ–ø/–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å (–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–≥—Ä—É)\n"
              "&#9989; –ê–≤–∞, –ª–µ–≥–∫–∏–π —É—Ä–æ–≤–µ–Ω—å\n"
              "&#9989; –ê–≤–∞, —Å–ª–æ–∂–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å\n"
              "&#9989; –ê–≤–∞, –º–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞");



def chatSetTempData(chat_id, field, value):
    if (chat_id in chat_temp):
        #print(type(chat_temp[chat_id]))
        if type(chat_temp[chat_id]) != dict:
            chat_temp[chat_id] = dict()
    else:
        chat_temp[chat_id] = dict()

    chat_temp[chat_id][field]=value;
def chatGetTempData(chat_id, field):
    if (chat_id not in chat_temp):
        return None

    if field not in chat_temp[chat_id]:
        return None

    return chat_temp[chat_id][field]

def OnChatBotGameStart(event, session):

    if event.chat_id not in cache_chat_state.keys():
        cache_chat_state[event.chat_id] = {
            "game_state" :        GAME_STATE.GAME_WAIT,
            "current_round":      0,
            "current_word":       None,
            "owner":              event.obj.from_id,
            "timestamp_start":    round(time.time() * 1000),
            #"timestamp_activity": time.time(),
            "timer":              Timer(WAIT_PRE_GAME, OnChatGenerateWord, (event, session)),
            "users": {}
        }

        cache_chat_state[event.chat_id]["timer"].start()

        write_msg(session, event.chat_id,
                  "–ò–≥—Ä–∞ –∑–∞–ø—É—â–µ–Ω–∞! –í—Å–µ –≥–æ—Ç–æ–≤—ã? –ù–∞—á–∏–Ω–∞–µ–º —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥!\n"
                  "–ü—Ä–∞–≤–∏–ª–∞ –ø—Ä–æ—Å—Ç—ã - —Å–æ–±—Ä–∞—Ç—å —Å–ª–æ–≤–æ –∏–∑ —Ä–∞–∑–±—Ä–æ—Å–∞–Ω–Ω—ã—Ö –±—É–∫–≤ –∏ –Ω–∞–ø–∏—Å–∞—Ç—å –µ–≥–æ –≤ —á–∞—Ç.")
        database = Database()
        database.add_event(event.chat_id, "–ù–∞—á–∞—Ç–∞ –∏–≥—Ä–∞")

        if chatGetTempData(event.chat_id, "game_level") == None:
            chatSetTempData(event.chat_id, "game_level", database.get_level(event.chat_id))


    else:
        write_msg(session, event.chat_id, "–ò–≥—Ä–∞ —É–∂–µ –Ω–∞—á–∞—Ç–∞")
# –ü–æ–¥–≤–µ–¥–µ–Ω–∏–µ –∏—Ç–æ–≥–æ–≤
def Summarizing(event, session):
    try:

        print(cache_chat_state[event.chat_id]["users"])
        player_scores = sorted(cache_chat_state[event.chat_id]["users"].items(), key=operator.itemgetter(1), reverse=True)
        output_string = "–ò—Ç–∞–∫, –∏–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞ - –ø–æ–¥–≤–æ–¥–∏–º –∏—Ç–æ–≥–∏.\n"

        if(len(player_scores) == 0):
            output_string = "–ò—Ç–∞–∫, –∏–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞ - –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –Ω–µ –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–∞.\n"
            write_msg(session, event.chat_id, output_string)
            del cache_chat_state[event.chat_id]
            return

        for i in range(0, len(player_scores)):
            output_string += "%d. @id%s - %d –±–∞–ª–ª–æ–≤(–∞,–ª)\n" % (i + 1, player_scores[i][0], player_scores[i][1]);
        del cache_chat_state[event.chat_id]

        write_msg(session, event.chat_id, output_string)

    except Exception as e:
        print("–ü–æ–¥–≤–µ–¥–µ–Ω–∏–µ –∏—Ç–æ–≥–æ–≤: ")
        print(e)

    pass
def OnChatGenerateWord(event, session):

    if cache_chat_state[event.chat_id]["current_round"] >= DEFAULT_ROUND_COUNT:
        Summarizing(event, session)
        return

    database = Database()
    word = database.get_random_word()

    suffled_word = ""
    ifgenerater = False

    game_level = chatGetTempData(event.chat_id, "game_level")

    if chatGetTempData(event.chat_id, "game_level") == None:
        suffled_word = WordConstructor.scatterEasy(word).upper()
    else:
        if game_level == GAME_LEVEL.EASY_GAME:
            suffled_word = WordConstructor.scatterEasy(word).upper()
        else:
            suffled_word = WordConstructor.scatter(word).upper()

    cache_chat_state[event.chat_id]["timestamp_start"]  = round(time.time() * 1000)
    cache_chat_state[event.chat_id]["game_state"]       = GAME_STATE.GAME_WAIT_ANSWER
    cache_chat_state[event.chat_id]["current_word"]     = word
    cache_chat_state[event.chat_id]["current_round"]    += 1
    cache_chat_state[event.chat_id]["timer"]            = Timer(MAX_WORD_WAITING, OnChatAnswerTimeout, (event, session))
    cache_chat_state[event.chat_id]["timer"].start()
    #print("–¢–µ–∫—É—â–µ–µ —Å–ª–æ–≤–æ –¥–ª—è —á–∞—Ç–∞ %d - %s" % (event.chat_id, cache_chat_state[event.chat_id]["current_word"]))
    write_msg(session, event.chat_id, "–¢–µ–∫—É—â–µ–µ —Å–ª–æ–≤–æ: %s\n\n–ü–æ–±–µ–¥–∏—Ç —Ç–æ—Ç, –∫—Ç–æ –ø–µ—Ä–≤—ã–π –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ç–≥–∞–¥–∞–µ—Ç –¥–∞–Ω–Ω–æ–µ —Å–ª–æ–≤–æ!\n–£ –≤–∞—Å 25 —Å–µ–∫—É–Ω–¥! –ù–µ –±–æ–ª–µ–µ!" % (suffled_word))
def OnChatAnswerTimeout(event, session):

    write_msg(session, event.chat_id, "–°–ª–æ–≤–æ, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã –Ω–µ –æ—Ç–≥–∞–¥–∞–ª–∏ –±—ã–ª–æ - %s\n–°–ª–µ–¥—É—é—â–µ–µ —Å–ª–æ–≤–æ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥." % (cache_chat_state[event.chat_id]["current_word"]))
    cache_chat_state[event.chat_id]["timer"] = Timer(WAIT_AFTER_WORD, OnChatGenerateWord, (event, session))
    cache_chat_state[event.chat_id]["timer"].start()

    pass
def OnChatRecieveAnswer(event, session):

    if event.obj.text.lower().strip() == cache_chat_state[event.chat_id]["current_word"].lower().strip() and cache_chat_state[event.chat_id]["game_state"]==GAME_STATE.GAME_WAIT_ANSWER:
        cache_chat_state[event.chat_id]["game_state"] = GAME_STATE.GAME_WAIT_NEXT_WORD
        if event.obj.from_id not in cache_chat_state[event.chat_id]["users"]:
            cache_chat_state[event.chat_id]["users"][event.obj.from_id] = 1
        else:
            cache_chat_state[event.chat_id]["users"][event.obj.from_id] += 1
        database = Database()

        reaction = (round(time.time() * 1000) - cache_chat_state[event.chat_id]["timestamp_start"]) / 1000

        database.add_winner(event.chat_id, event.obj.from_id, reaction)
        output_string = "–£ –Ω–∞—Å –µ—Å—Ç—å –ø–æ–±–µ–¥–∏—Ç–µ–ª—å! –ò —ç—Ç–æ ‚Äî @id%s &#128293; \n(–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–ª–ª–æ–≤ - %d)\n‚è∞ –í—Ä–µ–º—è —Ä–µ–∞–∫—Ü–∏–∏ ‚Äî %f —Å–µ–∫—É–Ω–¥(–∞,—ã)\n&#9989; –°–ª–æ–≤–æ - %s\n\n" % \
                        (event.obj.from_id, cache_chat_state[event.chat_id]["users"][event.obj.from_id],
                         reaction,
                         cache_chat_state[event.chat_id]["current_word"])

        # –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ –ø–æ—Å–ª–µ–¥–Ω–∏–π - –¥–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫—É. –°–ª–µ–¥—É—é—â–µ–µ —Å–ª–æ–≤–æ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥!
        if cache_chat_state[event.chat_id]["current_round"] < DEFAULT_ROUND_COUNT:
            output_string += "–°–ª–µ–¥—É—é—â–µ–µ —Å–ª–æ–≤–æ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥!"

        write_msg(session, event.chat_id,
                output_string)

        if (cache_chat_state[event.chat_id]["timer"] != None):
            if (cache_chat_state[event.chat_id]["timer"].isAlive()):
                cache_chat_state[event.chat_id]["timer"].cancel()
                cache_chat_state[event.chat_id]["timer"] = None

        cache_chat_state[event.chat_id]["timer"] = Timer(WAIT_AFTER_WORD, OnChatGenerateWord, (event, session))
        cache_chat_state[event.chat_id]["timer"].start()
def OnChatBotSearchWord(event, session):

    # –ü–æ–∏—Å–∫ –≤–µ—Ä–Ω–æ–≥–æ —Å–ª–æ–≤–∞.


    pass
def OnChatBotStop(event, session):
    if event.chat_id in cache_chat_state:
        if(event.obj.from_id == cache_chat_state[event.chat_id]["owner"]):
            write_msg(session, event.chat_id, "–í—ã –æ—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ –∏–≥—Ä—É")
            if(cache_chat_state[event.chat_id]["timer"] != None):
                if(cache_chat_state[event.chat_id]["timer"].isAlive()):
                    cache_chat_state[event.chat_id]["timer"].cancel()
                    cache_chat_state[event.chat_id]["timer"] = None
            del cache_chat_state[event.chat_id]
        else:
            write_msg(session, event.chat_id, "@id%s –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–µ–∫—É—â—É—é –∏–≥—Ä—É - –æ–Ω–∞ –±—ã–ª–∞ —Å–æ–∑–¥–∞–Ω–∞ @id%s"
                      % (event.obj.from_id, cache_chat_state[event.chat_id]["owner"]))
def OnChatBotSetLevel(event, session, level):
    if level != None:
        if len(level) == 1:
            database = Database()
            param = level[0].strip()
            if(param == GAME_LEVEL.EASY_GAME_S):
                database.set_level(event.chat_id, GAME_LEVEL.EASY_GAME)
                #chat_temp[event.chat_id]["game_level"]=GAME_LEVEL.EASY_GAME
                chatSetTempData(event.chat_id, "game_level", GAME_LEVEL.EASY_GAME)
                write_msg(session, event.chat_id, "–í—ã –∏–∑–º–µ–Ω–∏–ª–∏ —É—Ä–æ–≤–µ–Ω—å –∏–≥—Ä—ã –Ω–∞ –ª–µ–≥–∫–∏–π");
            elif param == GAME_LEVEL.HARD_GAME_S:
                database.set_level(event.chat_id, GAME_LEVEL.HARD_GAME)
                chatSetTempData(event.chat_id, "game_level", GAME_LEVEL.HARD_GAME)
                write_msg(session, event.chat_id, "–í—ã –∏–∑–º–µ–Ω–∏–ª–∏ —É—Ä–æ–≤–µ–Ω—å –∏–≥—Ä—ã –Ω–∞ —Å–ª–æ–∂–Ω—ã–π");
            else:
                write_msg(session, event.chat_id, "–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä –∫–æ–º–∞–Ω–¥—ã");
def OnChatMyStats(event, session):

    print("—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
    database = Database()
    result = database.get_stat(event.obj.from_id)

    if(len(result) == 1):
        write_msg(session, event.chat_id, "üí• –í–∞—à–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ %d - –±–∞–ª–ª–æ–≤ (–∞,–æ–≤), —Å—Ä–µ–¥–Ω—è—è —Å–∫–æ—Ä–æ—Å—Ç—å —Ä–µ–∞–∫—Ü–∏–∏ - %f —Å–µ–∫—É–Ω–¥(–∞,—ã)"
                  % (result[0][0], round(result[0][1], 2)));
    else :
        write_msg(session, event.chat_id, "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, –Ω–∞—á–∏–Ω–∞–π—Ç–µ –∏–≥—Ä–∞—Ç—å üòè");
    pass